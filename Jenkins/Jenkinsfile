def branch = env.BRANCH_NAME
def build = env.BUILD_NUMBER
def DEBUG = true
def appname ="helloworld"
def DEPLOY = false
def artifactory = "docker.io" 
def repo = "elevy99927jbdemo" 
def appimage = "${artifactory}/${repo}/${appname}"
def apptag = "rz-${build}"

def kubernetesurl = "https://kubernetes.default.svc"

if (branch == "dev"){
echo "----------  dev   -------"
kubernetesurl = "https://kubernetes.default.svc"
} else if  (branch == "qa"){
echo "----------  qa   -------"
} else if  (branch == "main"){
echo "----------  master   -------"
} else {

}


podTemplate(containers: [
      containerTemplate(name: 'jnlp', image: 'jenkins/inbound-agent', ttyEnabled: true),
      containerTemplate(name: 'docker', image: 'gcr.io/kaniko-project/executor:debug-v0.19.0', command: "/busybox/cat", ttyEnabled: true)
  ],
  volumes: [
     configMapVolume(mountPath: '/kaniko/.docker/', configMapName: 'docker-cred')
  ]) {
    node(POD_LABEL) {
        stage('chackout') {
            container('jnlp') {
            sh '/usr/bin/git config --global http.sslVerify false'
	        checkout scm
	   // sh "sleep 6000"
          }
        } // end chackout

        stage('build') {
            container('docker') {
//               echo "Building docker image..."
// 	      echo "Original step was using docker for build."
// 	      echo "You will need to use kaniko instead"
// 	      sh "echo ${env.WORKSPACE}"
//               sh "echo docker build -t $appimage --no-cache ."
//               sh "echo docker login $artifactory -u admin -p password"
//               sh "echo docker push $appimage"
	      /kaniko/executor --context="/home/jenkins/agent/workspace/test-job1/spring-petclinic"  \
	      --dockerfile Dockerfile  \
	      --destination "${artifactory}/${repo}/${appname}":"rz-${build}" \
	      --force  \
	   //   /kaniko/executor --context="/home/jenkins/agent/workspace/test-job1/spring-petclinic"  \
           //   --destination ${appimage}:${apptag} \
           //   --force \
           //   -v=debug
	  //    kaniko build -f Dockerfile -t <appimage> --no-cache .
	  //    kaniko --context <context> --dockerfile <dockerfile> --destination <registry>/<appimage> --username <username> --password <password> --insecure
	  //    echo "<password>" | /kaniko/executor --context . --dockerfile Dockerfile --destination <registry>/<appimage> --username <username> --password-stdin
	  //    kaniko push --destination <registry>/<appimage> --username <username> --password <password> --insecure
	  //    /kaniko/executor --context . --dockerfile Dockerfile --destination <registry>/<appimage> --username <username> --password <password>
            }
        } //end build

        stage('deploy') {
            container('docker') {
	      if (DEPLOY) {
                echo "***** Doing some deployment stuff *********"
             }  else {
                echo "***** NO DEPLOY - Doing somthing else. Testing? *********"
             }
           }
        } //end deploy
    }
}

